<configure
    xmlns="http://namespaces.zope.org/zope"
    xmlns:browser="http://namespaces.zope.org/browser"
    xmlns:genericsetup="http://namespaces.zope.org/genericsetup"
    xmlns:zcml="http://namespaces.zope.org/zcml"
    xmlns:plone="http://namespaces.plone.org/plone"
    xmlns:i18n="http://namespaces.zope.org/i18n"
    xmlns:monkey="http://namespaces.plone.org/monkey"
    i18n_domain="plone">

    <include package="plone.behavior" file="meta.zcml" />
    <include package="plone.resource" file="meta.zcml" />

    <include package="plone.resource" />
    <include package="plone.tiles" />
    <include package="plone.subrequest" />
    <include package="plone.transformchain" />
    <include package="plone.jsonserializer" />

    <include package="plone.app.registry" />

    <include file="upgrades.zcml" />

    <permission
        id="plone.ManageSiteLayouts"
        title="Plone: Manage Site Layouts"
        />
    <permission
        id="plone.ManageContentLayouts"
        title="Plone: Manage Content Layouts"
        />
    <permission
        id="plone.CustomizeContentLayouts"
        title="Plone: Customize Content Layouts"
        />

    <genericsetup:registerProfile
        name="default"
        title="Blocks rendering engine"
        description="Installs transformation steps to apply the Blocks rendering algorithm for Plone pages."
        directory="profiles/default"
        for="Products.CMFPlone.interfaces.IPloneSiteRoot"
        provides="Products.GenericSetup.interfaces.EXTENSION"
        />

    <genericsetup:importStep
        name="plone.app.blocks_default"
        title="Blocks rendering engine setup"
        description="Initializes registry values for default site layouts"
        handler=".setuphandlers.step_setup_various"
        />

    <!-- Register the layout adapter and behavior -->
    <adapter
        factory=".layoutbehavior.LayoutAwareDefault"
        />
    <plone:behavior
        name="plone.layoutaware"
        title="Layout support"
        description="Adds layout support to your content type"
        provides=".layoutbehavior.ILayoutAware"
        marker=".layoutbehavior.ILayoutBehaviorAdaptable"
        factory=".layoutbehavior.LayoutAwareBehavior"
        />
    <adapter
        factory=".layoutbehavior.layoutAwareTileDataStorage"
        />
    <adapter
        for=".layoutbehavior.ILayoutBehaviorAdaptable
             * plone.tiles.interfaces.IPersistentTile"
        factory="plone.tiles.data.defaultPersistentTileDataStorage"
        />
    <adapter
        name="plone.app.blocks.layoutbehavior"
        factory=".drafting.LayoutAwareDataStorageSyncher"
        zcml:condition="installed plone.app.drafts"
        />

    <!-- Register the default views for the layout behavior -->
    <browser:page
        for="*"
        name="layout_view"
        class=".layoutviews.ContentLayoutView"
        permission="zope2.View"
        template="templates/layout_view.pt"
        />

    <include package="plone.app.contentmenu" />
    <browser:menuItems
      for="*"
      menu="plone_displayviews">
      <browser:menuItem
        title="Custom layout"
        action="layout_view"
        i18n:translate="title"
        />
   </browser:menuItems>


    <!-- Register resource traverser for content layouts -->
    <adapter
        name="contentlayout"
        for="* zope.publisher.interfaces.IRequest"
        provides="zope.traversing.interfaces.ITraversable"
        factory=".resource.ContentLayoutTraverser"
        />

    <!-- Plone5.2 TODO - Re-evaluate gridsystem -->
    <!-- BS3 Grid System -->
    <utility
        provides=".gridsystem.IGridSystem"
        component=".gridsystem.BS3GridSystem"
        name="bs3"
        />

    <!-- Foundation Grid System -->
    <utility
        provides=".gridsystem.IGridSystem"
        component=".gridsystem.FoundationGridSystem"
        name="foundation"
        />

    <!-- Deco Grid System -->
    <utility
        provides=".gridsystem.IGridSystem"
        component=".gridsystem.DecoGridSystem"
        name="deco"
        />

    <!-- 8700: Replace css classes -->
    <adapter
        for="* *"
        name="plone.app.blocks.gridsystem"
        factory=".transform.ApplyResponsiveClass"
        />

    <!-- patches -->
    <include package="collective.monkeypatcher" />
    <monkey:patch
        description=""
        class="plone.app.mosaic.setuphandlers"
        original="create_ttw_site_layout_examples"
        replacement=".patches.create_ttw_site_layout_examples"
        />

    <utility
        component=".vocabularies.AvailableSiteLayouts"
        name="plone.availableSiteLayouts"
        />


    <!-- Register vocabulary all available content layouts-->
    <utility
        component=".resource.AvailableContentLayoutsVocabularyFactory"
        name="plone.availableContentLayouts"
        />


    <!-- 8000: Turn the response into an lxml tree for further manipulation -->
    <adapter
        for="* *"
        name="plone.app.blocks.parsexml"
        factory=".transform.ParseXML"
        />


    <subscriber
        for=".layoutbehavior.ILayoutAware
             zope.lifecycleevent.interfaces.IObjectModifiedEvent"
        handler=".subscribers.onLayoutEdited" />



    <adapter
        name="SearchableText"
        factory=".indexing.LayoutSearchableText"
        zcml:condition="not-installed collective.dexteritytextindexer"
        />

    <adapter
        name="content"
        factory=".indexing.LayoutSearchableTextIndexExtender"
        zcml:condition="installed collective.dexteritytextindexer"
        />

    <adapter factory=".linkintegrity.BlocksDXGeneral" />
    <adapter factory=".linkintegrity.TileGeneral" />

    <!-- plone.tiles overrides here! -->
    <!-- Plone5.2 - Removing unconfigure records for now -->
    <!-- <include package="z3c.unconfigure" file="meta.zcml" /> -->
    <!-- <unconfigure> -->
    <!-- <adapter factory="plone.tiles.data.transientTileDataManagerFactory" /> -->
    <!-- <adapter factory="plone.tiles.data.PersistentTileDataManager" /> -->
    <!-- </unconfigure> -->
    <!-- <adapter factory=".tiles.transientTileDataManagerFactory" /> -->
    <!-- <adapter factory=".tiles.PersistentTileDataManager" /> -->

</configure>
